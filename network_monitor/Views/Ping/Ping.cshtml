@model network_monitor.Models.PingResults

<!DOCTYPE html>
<html>
<head>
    <title>Ping</title>
    <script>
        function validateForm() {
            var address = document.getElementById("address").value;
            var regex = /^(?:(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}|(?:\d{1,3}\.){3}\d{1,3})$/;
            if (!regex.test(address)) {
                alert("Invalid IP address or hostname.");
                return false;
            }
            return true;
        }
    </script>
</head>
<body>
    <h2>Ping Utility</h2>
    <form onsubmit="return validateForm()">
        <label for="address">Address:</label>
        <input type="text" id="address" name="address" value="@Model?.Address" />
        <button type="submit">Ping</button>
    </form>

    @if (Model != null)
    {
        <div>
            <p>Address: @Model.Address</p>
            <p>Round Trip Time: @Model.RoundTripTime ms</p>
            <p>Status: @Model.Status</p>
        </div>
    }

    @if (ViewData.ModelState.ErrorCount > 0)
    {
        <div>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p style="color:red">@error.ErrorMessage</p>
            }
        </div>
    }
</body>
</html>